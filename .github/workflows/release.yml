name: Release Actions

permissions:
  # To create a PR
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      ref:
        required: true
        description: "GitHub ref to use"
        type: string
      version:
        required: true
        description: "Version to produce"
        type: string
      branch_from_ref:
        required: false
        description: "Commit to branch from, if not the tag"
        type: string
      release-notes:
        required: true
        description: "Release notes to publish"
        type: string
      queue-merge:
        required: false
        default: false
        description: "Whether to queue the release for immediate merge"
        type: boolean
      run-dispatch-commands:
        required: false
        default: false
        # If version contains a '-', i.e.: a prerelease build, these commands are disabled until further notice.
        description: "Whether to run dispatch commands"
        type: boolean
      version-set:
        required: false
        description: "Set of language versions to use for builds, lints, releases, etc."
        type: string
        # Example provided for illustration, this value is derived by scripts/get-job-matrix.py build
        default: |
          {
            "dotnet": "6.0.x",
            "go": "1.18.x",
            "nodejs": "16.x",
            "python": "3.9.x"
          }


env:
  PULUMI_VERSION: ${{ inputs.version }}
  GIT_REF: ${{ inputs.ref }}
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  sdks:
    name: ${{ matrix.language }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ["nodejs"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Node ${{ fromJson(inputs.version-set).nodejs }}
        if: ${{ matrix.language == 'nodejs' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ fromJson(inputs.version-set).nodejs }}
          registry-url: https://registry.npmjs.org
          cache: yarn
          cache-dependency-path: sdk/nodejs/yarn.lock
          always-auth: true
      - name: Install yarn
        run: |
          npm install -g yarn
      # TODO something in `cd sdk/nodejs && make ensure` executes Go
      # downloads, which is unfortunate and wasteful in this context.
      # When this is fixed the no-op Go command can be removed.
      - name: Make no-op Go command to avoid Go builds
        run: |
          cd sdk/nodejs
          mkdir -p bin
          # shellcheck disable=SC2230 # need to locate echo binary
          ln -s "$(which echo)" bin/go
      - name: Ensure installed dependencies
        run: |
          cd sdk/nodejs
          PATH=./bin:$PATH make ensure
      - name: Build the Node SDK package
        run: |
          cd sdk/nodejs
          PATH=./bin:$PATH make build_package
      - name: Pack the Node SDK
        run: |
          cd sdk/nodejs/bin
          npm pack
      - name: Publish Packages
        run: |
          make -C sdk/${{ matrix.language}} publish
